entity Vendor {
	name String required,
    pan String required,
    gstin String required,
}

enum ShiperReceiverType {
    DOCUMENT, PARCEL, PACKAGE
}

entity ShiperReceiverInfo {
	type ShiperReceiverType required,
	shipperName String required,
    phoneNo String required,
    address String required,
    emailId String
}

enum ShipmentType {
    DOCUMENT, PARCEL, PACKAGE
}

enum ShipmentMode {
	AIR, ROAD, SEA
}

enum PaymentMode {
	TOPAY, PAID, CREDIT, CASH, CHEQUE, ACCOUNT, UPI 
}

enum CARRIER {
	DHL, FEDEX
}

enum Status {
	INTRANSIENT,
    PENDING,
    DELIVERED,
    DELAYED,
    ONHOLD
}

entity ShipmentInfo {
	consignmentNo String required,
    isThirdParty Boolean,
    carrier CARRIER,
    courier String,
    carrierRefNo String,
    shipmentType ShipmentType required,
    shipmentMode ShipmentMode required,
    origin String required,
    destination String required,
    pickupDate LocalDate required,
    expectedDeliveryDate LocalDate required,
    weight BigDecimal ,
    quantity Long,
    totalFright BigDecimal,
    packageDesciption String,
    paymentMode PaymentMode required,
    status Status required,
    comments String
}

relationship OneToOne {
	ShipmentInfo{vendor} to Vendor
}

relationship OneToMany {
	ShipmentInfo{shipperREceiverInfo} to ShiperReceiverInfo,
}

entity State {
	stateCode String,
    stateName String
}

entity Country {
	countryCode String,
    countryName String
}

relationship OneToOne {
	State{country} to Country
}

relationship OneToOne {
	ShipmentInfo{origin} to State
}

relationship OneToOne {
	ShipmentInfo{destination} to State
}

// an ignored comment
/** not an ignored comment */
entity Location {
	streetAddress String,
	postalCode String,
	city String,
	stateProvince String
}

entity Department {
	departmentName String required
}

/**
 * Task entity.
 * @author The JHipster team.
 */
entity Task {
	title String,
	description String
}

/**
 * The Employee entity.
 */
entity Employee {
	/**
	* The firstname attribute.
	*/
	firstName String,
	lastName String,
	email String,
	phoneNumber String,
	hireDate Instant,
	salary Long,
	commissionPct Long
}

entity Job {
	jobTitle String,
	minSalary Long,
	maxSalary Long
}

entity JobHistory {
	startDate Instant,
	endDate Instant,
	language Language
}

enum Language {
    FRENCH, ENGLISH, SPANISH
}

relationship OneToOne {
	Country{region} to Region
}

relationship OneToOne {
	Location{country} to Country
}

relationship OneToOne {
	Department{location} to Location
}

relationship ManyToMany {
	Job{task(title)} to Task{job}
}

// defining multiple OneToMany relationships with comments
relationship OneToMany {
	Employee{job} to Job,
	/**
	* A relationship
	*/
	Department{employee} to
	/**
	* Another side of the same relationship
	*/
	Employee
}

relationship ManyToOne {
	Employee{manager} to Employee
}

// defining multiple oneToOne relationships
relationship OneToOne {
	JobHistory{job} to Job,
	JobHistory{department} to Department,
	JobHistory{employee} to Employee
}

// Set pagination options
paginate JobHistory, Employee with infinite-scroll
paginate Job with pagination

// Use Data Transfert Objects (DTO)
// dto * with mapstruct

// Set service options to all except few
service all with serviceImpl except Employee, Job

// Set an angular suffix
// angularSuffix * with mySuffix
